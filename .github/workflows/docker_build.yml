##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

# Build baf-build docker image triggered by :
#  - push on develop branch for latest tags 
#  - create tag vx.y.z for release tags
#
# Build corda os docker image triggered by :
#  - push on develop branch for latest tags 
#  - create tag vx.y.z for release tags

name: Docker images build

on:
  create:
  push:
    branches:
        - develop
    paths:
      - 'Dockerfile'        
      - 'Dockerfile.jkd8'
      - 'platforms/r3-corda/images/**'
      - 'examples/supplychain-app/quorum/**'            

jobs:
  # on push to develop branch, create docker tags latest and jdk8-latest
  baf-build-latest:
    if: ${{ startsWith(github.ref, 'refs/heads/develop') }}
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Build and push release tag latest
      id: docker_build_latest
      uses: docker/build-push-action@v2
      with:
        file: ./Dockerfile
        push: true
        tags: hyperledgerlabs/baf-build:latest  
    -
      name: Build and push tag jdk8-latest
      id: docker_build_jdk8_latest
      uses: docker/build-push-action@v2
      with:
        file: ./Dockerfile.jdk8
        push: true
        tags: hyperledgerlabs/baf-build:jdk8-latest   
  # on tag vx.y.z created, create docker tag stable, x.y.z and jdk8
  baf-build-release: 
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v2
    - name: Set output
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/tags/v}
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Build and push release tag ${{ steps.vars.outputs.tag }}  
      id: docker_build_release
      uses: docker/build-push-action@v2
      with:
        file: ./Dockerfile
        push: true
        tags: hyperledgerlabs/baf-build:${{ steps.vars.outputs.tag }}    
    -
      name: Build and push release tag stable  based on v${{ steps.vars.outputs.tag }}
      id: docker_build_stable
      uses: docker/build-push-action@v2
      with:
        file: ./Dockerfile
        push: true
        tags: hyperledgerlabs/baf-build:stable          
    -
      name: Build and push tag jdk8-latest
      id: docker_build_jdk8
      uses: docker/build-push-action@v2
      with:
        file: ./Dockerfile.jdk8
        push: true
        tags: hyperledgerlabs/baf-build:jdk8
  cordaOS-latest: 
    if: ${{ startsWith(github.ref, 'refs/heads/develop') }}
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v2
    - 
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '8'
    - name: Set output
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/tags/v}
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - 
      name: corda builds
      run: |
        WDIR=`pwd`
        
        java -version
        update-alternatives --list java

        echo "---- building networkmap ----"
        cd ${WDIR}/platforms/r3-corda/images/networkmap
        mvn clean install -DskipTests   

        echo "---- building doorman ----"
        cd ${WDIR}/platforms/r3-corda/images/doorman
        mvn clean install -DskipTests  
    -
      name: Build and push cordaOS doorman latest  
      id: corda_doorman_latest
      uses: docker/build-push-action@v2
      with:
        context: platforms/r3-corda/images/doorman
        push: true
        tags: hyperledgerlabs/doorman-linuxkit:latest            
    -
      name: Build and push cordaOS networkmap latest
      id: corda_networkmap_latest
      uses: docker/build-push-action@v2
      with:
        context: platforms/r3-corda/images/networkmap
        push: true
        tags: hyperledgerlabs/networkmap-linuxkit:latest    
    -
      name: Build and push cordaOS node latest 
      id: corda_node_latest
      uses: docker/build-push-action@v2
      with:
        file: platforms/r3-corda/images/Dockerfile-corda-tls
        push: true
        tags: hyperledgerlabs/corda:latest 
          
  cordaOS-release: 
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v2
    - 
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '8'
    - name: Set output
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/tags/v}
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - 
      name: corda builds
      run: |
        WDIR=`pwd`
        
        java -version
        update-alternatives --list java

        echo "---- building networkmap ----"
        cd ${WDIR}/platforms/r3-corda/images/networkmap
        mvn clean install -DskipTests   

        echo "---- building doorman ----"
        cd ${WDIR}/platforms/r3-corda/images/doorman
        mvn clean install -DskipTests  
    -
      name: Build and push cordaOS doorman release tag ${{ steps.vars.outputs.tag }}  
      id: corda_doorman_release
      uses: docker/build-push-action@v2
      with:
        context: platforms/r3-corda/images/doorman
        push: true
        tags: hyperledgerlabs/doorman-linuxkit:${{ steps.vars.outputs.tag }}    
    -
      name: Build and push cordaOS doorman stable tag based on v${{ steps.vars.outputs.tag }}
      id: corda_doorman_stable
      uses: docker/build-push-action@v2
      with:
        context: platforms/r3-corda/images/doorman
        push: true
        tags:  hyperledgerlabs/doorman-linuxkit:stable          
    -
      name: Build and push cordaOS networkmap release tag ${{ steps.vars.outputs.tag }}  
      id: corda_networkmap_release
      uses: docker/build-push-action@v2
      with:
        context: platforms/r3-corda/images/networkmap
        push: true
        tags: hyperledgerlabs/networkmap-linuxkit:${{ steps.vars.outputs.tag }}    
    -
      name: Build and push cordaOS networkmap stable tag based on v${{ steps.vars.outputs.tag }}
      id: corda_networkmap_stable
      uses: docker/build-push-action@v2
      with:
        context: platforms/r3-corda/images/networkmap
        push: true
        tags:  hyperledgerlabs/networkmap-linuxkit:stable    
    -
      name: Build and push cordaOS node release tag ${{ steps.vars.outputs.tag }}  
      id: corda_node_release
      uses: docker/build-push-action@v2
      with:
        file: platforms/r3-corda/images/Dockerfile-corda-tls
        push: true
        tags: hyperledgerlabs/corda:${{ steps.vars.outputs.tag }}    
    -
      name: Build and push cordaOS node stable tag based on v${{ steps.vars.outputs.tag }}
      id: corda_node_stable
      uses: docker/build-push-action@v2
      with:
        file: platforms/r3-corda/images/Dockerfile-corda-tls
        push: true
        tags:  hyperledgerlabs/corda:stable    

  quorum-latest: 
    if: ${{ startsWith(github.ref, 'refs/heads/develop') }}
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Build and push supplychain app latest
      id: quorum_supplychain_latest
      uses: docker/build-push-action@v2
      with:
        context: examples/supplychain-app/quorum/express_nodeJS
        push: true
        tags: hyperledgerlabs/supplychain_quorum:express_app_latest            

  quorum-release: 
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - 
      name: Set output
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/tags/v}      
    -
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Build and push supplychain app release
      id: quorum_supplychain_release
      uses: docker/build-push-action@v2
      with:
        context: examples/supplychain-app/quorum/express_nodeJS
        push: true
        tags: hyperledgerlabs/supplychain_quorum:express_app_${{ steps.vars.outputs.tag }}     
    -
      name: Build and push supplychain app stable
      id: quorum_supplychain_stable
      uses: docker/build-push-action@v2
      with:
        context: examples/supplychain-app/quorum/express_nodeJS
        push: true
        tags: hyperledgerlabs/supplychain_quorum:express_app_stable   
