##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

#############################################################################################
# This role creates value file for the deployment of CA Tools CLI
#############################################################################################

# # Check if CA server is available
- name: "waiting for the CA server to be created in {{ item.name | lower }}-net"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/helm_component"
  vars:
    component_type: "Pod"
    namespace: "{{ item.name | lower }}-net"
    component_name: "{{ component_services.ca.name }}"
    label_selectors:
      - name = {{ component_name }}
  when: add_peer is not defined or add_peer != 'true'

############################################################################################
# This task creates the CA-tools value files
- name: "Create CA-tools Values for orderer"
  include_role:
    name: helm_component
  vars:
    name: "ca-tools"
    type: "ca-tools"
    org_name: "{{ item.name | lower }}"
    component_type: "{{ item.type | lower }}"
    vault: "{{ item.vault }}"
    external_url_suffix: "{{ item.external_url_suffix }}"
    component_subject: "{{ item.subject }}"
    cert_subject: "{{ item.subject | regex_replace('/', ';') | regex_replace(',', '/') | regex_replace(';', ',') }}" # replace , to / and / to , for certpath
    component_country: "{{ item.country }}"
    component_state: "{{ item.state }}"
    component_location: "{{ item.location }}"
    ca_url: "{{ item.ca_data.url }}"
    proxy: "{{ network.env.proxy }}"
    alpine_image: "{{ network.docker.url }}/alpine-utils:1.0"
    git_url: "{{ gitops.git_url }}"
    git_branch: "{{ gitops.branch }}"
    charts_dir: "{{ gitops.chart_source }}"
    orderers_list: "{{ item.services.orderers }}"

#Git Push : Pushes the above generated files to git directory 
- name: Git Push
  include_role: 
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    gitops: "{{ item.gitops }}"
    GIT_RESET_PATH: "platforms/hyperledger-fabric/configuration"
    msg: "[ci skip] Pushing CA-tools files"

#####################################################################################################################
# This task wait for key certs exists in vault.
- name: Wait for CA key exists in vault.
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/setup"
  vars:
    vault_field: "{{ component_name }}-CA.key"
    vault_path: "{{ vault.secret_path | default('secretsv2') }}/crypto/{{ component_type }}Organizations/{{ component_name }}/ca"
    check: "crypto_materials"

# This task wait for admin tls exists in vault.
- name: Wait for admin tls exists in vault.
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/setup"
  vars:
    vault_field: "client.key"
    vault_path: "{{ vault.secret_path | default('secretsv2') }}/crypto/{{ component_type }}Organizations/{{ component_name }}/users/admin/tls"
    check: "crypto_materials"

# This task wait for orderers tls exists in vault.
- name: Wait for orderers tls exists in vault.
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/setup"
  vars:
    vault_field: "server.key"
    vault_path: "{{ vault.secret_path | default('secretv2') }}/crypto/{{ component_type }}Organizations/{{ component_name }}/orderers/{{ orderer.name }}.{{ component_name}}/tls"
    check: "crypto_materials"
  loop: "{{ item.services.orderers }}"
  loop_control:
    loop_var: orderer

# This task wait for ambassador key exists in vault.
- name: Wait for ambassador key exists in vault.
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/setup"
  vars:
    vault_field: "key"
    vault_path: "{{ vault.secret_path | default('secretv2') }}/crypto/{{ component_type }}Organizations/{{ component_name }}/ambassador/{{ orderer.name }}"
    check: "crypto_materials"
  loop: "{{ item.services.orderers }}"
  loop_control:
    loop_var: orderer
  when: network.env.proxy == 'ambassador'

#####################################################################################################################
# This task creates the Ambassador TLS credentials for orderers
- name: "Create the Ambassador credentials for orderers"
  include_role:
    name: create/k8s_secrets
  vars: 
    namespace: "{{ item.name | lower }}-net"
    vault: "{{ item.vault }}"
    kubernetes: "{{ item.k8s }}"
    check: "ambassador_orderer"
  loop: "{{ item.services.orderers }}"
  loop_control:
    loop_var: orderer
  when: network.env.proxy == 'ambassador'

############################################################################################
# This task copies the msp folder from the respective CA Tools CLI
# to the Ansible container
- name: Copy the msp folder from the ca tools
  shell: |
    export CA_TOOL_CLI=$(KUBECONFIG={{ kubernetes.config_file }}  kubectl get po -n {{ component_name }} | grep "ca-tools" | awk '{print $1}')
    KUBECONFIG={{ kubernetes.config_file }} kubectl cp {{ component_name }}/${CA_TOOL_CLI}:crypto-config/{{ component_type }}Organizations/{{ component_name }}/msp ./build/crypto-config/{{ component_type }}Organizations/{{ component_name }}/msp

############################################################################################
# This task copies the tls server.crt file from the respective CA Tools CLI 
# to the build directory
- name: Copy the tls server.crt file from the ca tools
  shell: |
    export CA_TOOL_CLI=$(KUBECONFIG={{ kubernetes.config_file }}  kubectl get po -n {{ component_name }} | grep "ca-tools" | awk '{print $1}')
    KUBECONFIG={{ kubernetes.config_file }} kubectl cp {{ component_name }}/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/{{ component_name }}/orderers/{{ orderer.name }}.{{ component_name }}/tls/server.crt ./build/crypto-config/ordererOrganizations/{{ component_name }}/orderers/{{ orderer.name }}.{{ component_name }}/tls/server.crt
  loop: "{{ network.orderers }}"
  loop_control:
    loop_var: orderer

############################################################################################
# This task copies the tls ca.crt file from the respective CA Tools CLI
# to the address specified in network.yaml
- name: Copy the tls ca.crt file from the ca tools
  shell: |
    export CA_TOOL_CLI=$(KUBECONFIG={{ kubernetes.config_file }}  kubectl get po -n {{ component_name }} | grep "ca-tools" | awk '{print $1}')
    KUBECONFIG={{ kubernetes.config_file }} kubectl cp {{ component_name }}/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/{{ component_name }}/orderers/{{ orderer.name }}.{{ component_name }}/tls/ca.crt  {{ orderer.certificate }}
  loop: "{{ network.orderers }}"
  loop_control:
    loop_var: orderer
  when: add_new_org == 'false' and add_peer is not defined
